* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

ul {
    list-style: none;
}

body {
    background-image: url(./assets/bg.jpg);
    background-position: top center;
    background-size: 100% auto;
    background-repeat: no-repeat;
    background-color: #121214;
}

body * {
    font-family: 'Inter', sans-serif;
    line-height: 160%;
}

/* main * {
    border: 1px solid red;
} */

header {
    padding-top: 32px;
    height: calc(170px + 32px);
}

header div {
    width: 170px;
    margin: auto; /*Usado para alinhar DIVS no centro da tela*/
    background-image: linear-gradient(90deg, #9572FC 0%, #43E7AD 50.52%, #E2D45C 100%);
    border-radius: 50%;

    display: flex;
    padding: 4px;
    transition: transform .3s;


}

header div:hover{
    transform: scale(1.1);
}

header div img {
    width: 100%;
    border-radius: 50%;
}

main {
    max-width: 580px;
    width: 90%;
    margin: 32px auto; /*Usado para alinhar DIVS no centro da tela*/

    display: grid;
    gap: 24px;
    /* flex-direction: column; */

    padding-top: 32px;

}

section {
    color: white;

    background-image: linear-gradient(90deg, #9572FC 0%, #43E7AD 50.52%, #E2D45C 100%);
    padding-top: 4px;
    border-radius: 10px;
}

section div {
    background-color: #2A2634;
    padding: 32px;
    padding-top: 24px;
    border-radius: 8px;

    /* border-top: 4px solid red; */
}

section h2 {
    letter-spacing: -0.47px;
}

section p {
    letter-spacing: -0.18px;
    color: #A1A1AA;
}

section ul {
    display: flex;
    gap: 16px;
    /* Permite que a lista ao chegar o tamanho maximo da section posicione os elementos para baixo */
    flex-wrap: wrap;
    margin-top: 24px;
    
}

section ul li {
    transition: transform .3s;
}

section ul li:hover{
    transform: scale(1.1);
}

.games-list img {
    width: 110px;
    border-radius: 8px;
}

.channel-list img {
    border-radius: 50%;
    width: 75px;
    border: 1px solid #443e54;
}

/* Animation */

header div{
    animation: fromTop .7s .1s backwards;
    /* Não preciso por o animation delay basta acrescentar o "1s" no animation ao lado do ".7s" */
    /* animation-delay: 1s; */
}

main section {
    animation: fromBottom .7s backwards;
    /* Não preciso por o animation delay basta acrescentar o "1s" no animation ao lado do ".7s" */
    /* animation-delay: 1s; */
}

/* :NTH-CHILD (Numero do elemento segundo sua ordem): usado para definir propriedades para elementos específicos dentro de uma "section" */

main section:nth-child(1) {
    animation-delay: 0;

}

main section:nth-child(2) {
    animation-delay: .3s;

}
main section:nth-child(3) {
    animation-delay: .6s;

}

@keyframes fromTop {
    from {
        opacity: 0;
        transform: translateY(-30px)
    }

    to{
        opacity: 1;
        transform: translateY(0)
    }
}

@keyframes fromBottom {
    from {
        opacity: 0;
        transform: translateX(-30px)
    }

    to{
        opacity: 1;
        transform: translateY(0px)
    }
}